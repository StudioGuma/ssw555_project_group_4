from gedcom.parser import Parser
from datetime import date
from dateutil.ralativedelta import relativedelta
def calculate_age(birth_date, death_date=None):
  if birth_date:
    try:
      birth_date_obj = datetime.strptime(birth_date, '%d %b %Y').date()
    except ValueError:
  return "N/A"
if death_date:
  try:
    death_date_obj = datetime.strptime(death_date, '%d %b %Y').date()
    except ValueError:
  return "N/A"
age = relativedelta(death_date_obj, birth_date_obj)
return f"{age.year} years"
else:
  today = date.today()
  age = relativedelta(today, birth_date_obj)
  return f"{age.years} years"
else:
  return "N/A"
file_path = 'ssw555_proj1.ged'
gedcom_parser = Parser()
gedcom_parser.parser_file(ssw555_proj1.ged)
for element in gedcom_parser.get_root_child_element():
  if isinstance(element, IndividualElement):
    name: element.get__name()
    birth_data = element.get_birth_data()
    death_data = element.get_death_data()
    birth_date = birth_data[0] if birth_data else None
    death_data = death_data[0] if death_data else None
    age = calculate_age(birth_date, death_date)
    print(f"{name[0]} {name[1]}: Age {age}:)
