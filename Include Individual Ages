from gedcom.element.individual import IndividualElement
from gedcom.parser import Parser
from datetime import date
from datetime import datetime

def calculate_age(born):
 today = date.today()
    return today.year - born.year - ((today.month, today.day) < (born.month, born.day))

file_path = 'C:\\Users\\Ernesto Salinas\\OneDrive\\Desktop\\ssw555_proj1.ged'  # Replace with the actual file path

gedcom_parser = Parser()

gedcom_parser.parse_file(file_path)

root_child_elements = gedcom_parser.get_root_child_elements()

for element in root_child_elements:
  if isinstance(element, IndividualElement):
     name = element.get_name()
      birth_data = element.get_birth_data()

try:
 birth_date = datetime.strptime(birth_date_str, '%d %b %Y').date()
                age = calculate_age(birth_date)
                print(f"{name[0]} {name[1]} is {age} years old.")
            except ValueError:
                print(f"Could not parse birth date for {name[0]} {name[1]}: {birth_date_str}")
        else:
            print(f"No birth date found for {name[0]} {name[1]}.")
